name: Build Cython Extensions

on:
  push:
    paths:
      - 'retopoflow/cy/*.pyx'
      - 'retopoflow/cy/*.pxd'
      - 'cy_setup.py'
      - '.github/workflows/build_cython.yml'
  pull_request:
    paths:
      - 'retopoflow/cy/*.pyx'
      - 'retopoflow/cy/*.pxd'
      - 'cy_setup.py'
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11.9']  # Match exact Python version used by Blender
        include:
          - os: macos-latest
            target: native
            compile_target: arm64
          - os: macos-latest
            target: intel
            compile_target: x86_64

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Windows-specific setup for Visual Studio 2022 - using default toolset
    - name: Set up MSVC (Visual Studio 2022)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        # Use default VS2022 toolset without specifying a version
        arch: x64       # Target 64-bit architecture

    # Debug information for build environment
    - name: Debug build environment
      shell: bash
      run: |
        python -c "import sys; print(f'Python version: {sys.version}')"
        python -c "import platform; print(f'Platform: {platform.platform()}')"
        python -c "import os; print(f'Environment: {os.environ.get(\"PLAT_NAME\", \"unknown\")}')"
        python -c "import platform; print(f'Machine: {platform.machine()}')"
        python -c "import sysconfig; print(f'Platform tag: {sysconfig.get_platform()}')"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install cython numpy setuptools wheel

    # Platform-specific build commands
    - name: Build Cython extensions (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        echo "Building with MSVC for Windows..."
        python cy_setup.py build_ext --inplace --compiler=msvc

    - name: Build Cython extensions (macOS)
      if: matrix.os == 'macos-latest'
      shell: bash
      env:
        TARGET_ARCH: ${{ matrix.compile_target }}
        ARCHFLAGS: ${{ matrix.target == 'intel' && '-arch x86_64' || matrix.target == 'native' && '-arch arm64' || '' }}
      run: |
        echo "Building for macOS with arch: $TARGET_ARCH..."
        python cy_setup.py build_ext --inplace

    - name: Build Cython extensions (Linux)
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        echo "Building for Linux..."
        python cy_setup.py build_ext --inplace

    - name: List compiled extensions
      shell: bash
      run: |
        cd retopoflow/cy
        echo "Current directory contents:"
        ls -la
        
        echo -e "\nSearching for compiled files recursively:"
        find . -type f \( -name "*.so" -o -name "*.pyd" \) || true
        
        # For Windows, show more details about the .pyd files
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          echo -e "\nDetails of Windows .pyd files:"
          # Use dir instead of dumpbin as it's more universally available
          dir *.pyd || true
        fi
        
        # Don't fail if no files are found
        if ! find . -type f \( -name "*.so" -o -name "*.pyd" \) | grep -q .; then
          echo "No compiled extensions found. This might indicate a build issue."
          # Continue without failing
          exit 0
        fi

    - name: Upload compiled extensions
      uses: actions/upload-artifact@v4
      if: always()  # Try to upload even if previous step failed
      with:
        name: compiled-extensions-${{ matrix.os }}-${{ matrix.target || 'default' }}
        path: |
          retopoflow/cy/**/*.so
          retopoflow/cy/**/*.pyd
        if-no-files-found: warn  # Change from error to warn
        retention-days: 7

  commit-files:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true

    - name: Copy compiled files to cy folder
      run: |
        mkdir -p retopoflow/cy
        find artifacts -type f \( -name "*.so" -o -name "*.pyd" \) -exec cp -f {} retopoflow/cy/ \;
        ls -la retopoflow/cy/

    - name: Commit and push changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add retopoflow/cy/*.so retopoflow/cy/*.pyd
        git commit -m "Update compiled Cython extensions [skip ci]" || echo "No changes to commit"
        git push